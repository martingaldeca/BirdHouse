on: [ push ]

name: Build backend images

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.2.2
          virtualenvs-create: true
          virtualenvs-in-project: false
          installer-parallel: true
      - name: Pass tests
        run: |
          poetry install --no-interaction
          poetry run pytest -c pytest.ini --maxfail=5
  flake8:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.2.2
          virtualenvs-create: true
          virtualenvs-in-project: false
          installer-parallel: true
      - name: Pass flake8
        run: |
          poetry install --no-interaction
          poetry run flake8

  production:
    runs-on: ubuntu-latest
    needs: [tests, flake8]
    if: github.ref == 'refs/heads/production'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Access to ip
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            cd BirdHouse
            
            echo "Pulling changes"
            git pull --ff-only 
            
            echo "Updating production settings"
            rm settings/production.py
            echo TELEGRAM_TOKEN="${{ secrets.TELEGRAM_TOKEN }}" >> settings/production.py
            echo TELEGRAM_CHAT_ID="${{ secrets.TELEGRAM_CHAT_ID }}" >> settings/production.py
            echo TELEGRAM_SIGHTING_MESSAGE="${{ secrets.TELEGRAM_SIGHTING_MESSAGE }}" >> settings/production.py
            touch settings/testing.py
                        
            echo "Killing previous"
            ps axf | grep "python main.py" | grep -v grep | awk '{print "kill -9 " $1}'
            echo "Starting new"
            nohup python main.py > nohup.out 2> nohup.err < /dev/null &
            echo "Started"
